{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Rohit/reactTask/compare-player/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Players from './components/Players';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport ApolloClient from \"apollo-client\"; // const httpLink = new HttpLink({\n//   uri: 'http://localhost:4000/'\n// });\n// const wsLink = new WebSocketLink({\n//   uri: `ws://localhost:4000/`,\n//   options: {\n//     reconnect: true\n//   }\n// });\n// const link = split(\n//   ({ query }) => {\n//     const definition = getMainDefinition(query);\n//     return (\n//       definition.kind === 'OperationDefinition' &&\n//       definition.operation === 'subscription'\n//     );\n//   },\n//   wsLink,\n//   httpLink,\n// );\n// const client = new ApolloClient({\n//   link: link,\n//   cache: new InMemoryCache(),\n// });\n\nfunction App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => React.createElement(Players, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Documents/Rohit/reactTask/compare-player/src/App.js"],"names":["React","BrowserRouter","Router","Route","Link","Players","split","HttpLink","WebSocketLink","getMainDefinition","InMemoryCache","ApolloClient","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAE,MAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADA,CADF;AAUD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Players from './components/Players';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport ApolloClient from \"apollo-client\";\n\n// const httpLink = new HttpLink({\n//   uri: 'http://localhost:4000/'\n// });\n\n// const wsLink = new WebSocketLink({\n//   uri: `ws://localhost:4000/`,\n//   options: {\n//     reconnect: true\n//   }\n// });\n\n// const link = split(\n \n//   ({ query }) => {\n//     const definition = getMainDefinition(query);\n//     return (\n//       definition.kind === 'OperationDefinition' &&\n//       definition.operation === 'subscription'\n//     );\n//   },\n//   wsLink,\n//   httpLink,\n// );\n\n// const client = new ApolloClient({\n//   link: link,\n//   cache: new InMemoryCache(),\n// });\n\nfunction App() {\n  return (\n    <Router>\n    <div>    \n   <Route exact path=\"/\" component={()=><Players />} />\n\n \n    </div>\n \n  </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}