{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Rohit/reactTask/compare-player/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Players from './components/Players';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport ApolloClient from \"apollo-client\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000/'\n});\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000/`,\n  options: {\n    reconnect: true\n  }\n});\nconst link = split(({\n  query\n}) => {\n  const definition = getMainDefinition(query);\n  return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n}, wsLink, httpLink);\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: () => React.createElement(Players, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Documents/Rohit/reactTask/compare-player/src/App.js"],"names":["React","BrowserRouter","Router","Route","Link","Players","split","HttpLink","WebSocketLink","getMainDefinition","InMemoryCache","ApolloClient","httpLink","uri","wsLink","options","reconnect","link","query","definition","kind","operation","client","cache","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,OAAO,sCAAP;AACA,OAAO,mCAAP;AAEA,MAAMC,QAAQ,GAAG,IAAIL,QAAJ,CAAa;AAC5BM,EAAAA,GAAG,EAAE;AADuB,CAAb,CAAjB;AAIA,MAAMC,MAAM,GAAG,IAAIN,aAAJ,CAAkB;AAC/BK,EAAAA,GAAG,EAAG,sBADyB;AAE/BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AAFsB,CAAlB,CAAf;AAOA,MAAMC,IAAI,GAAGX,KAAK,CAEhB,CAAC;AAAEY,EAAAA;AAAF,CAAD,KAAe;AACb,QAAMC,UAAU,GAAGV,iBAAiB,CAACS,KAAD,CAApC;AACA,SACEC,UAAU,CAACC,IAAX,KAAoB,qBAApB,IACAD,UAAU,CAACE,SAAX,KAAyB,cAF3B;AAID,CARe,EAShBP,MATgB,EAUhBF,QAVgB,CAAlB;AAaA,MAAMU,MAAM,GAAG,IAAIX,YAAJ,CAAiB;AAC9BM,EAAAA,IAAI,EAAEA,IADwB;AAE9BM,EAAAA,KAAK,EAAE,IAAIb,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,SAASc,GAAT,GAAe;AACb,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAE,MAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADA,CADF;AAUD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Players from './components/Players';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport ApolloClient from \"apollo-client\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000/'\n});\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000/`,\n  options: {\n    reconnect: true\n  }\n});\n\nconst link = split(\n \n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <Router>\n    <div>    \n   <Route exact path=\"/\" component={()=><Players />} />\n\n \n    </div>\n \n  </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}