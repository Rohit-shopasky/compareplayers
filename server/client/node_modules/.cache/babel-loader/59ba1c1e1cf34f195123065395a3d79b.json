{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Rohit/reactTask/client/src/components/Players.js\";\nimport React from 'react';\nimport { Component, useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col } from \"shards-react\";\nimport StackGrid from \"react-stack-grid\";\nimport { getAllPlayers } from './query';\nimport Compare from './Compare';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button, Modal, ModalBody, ModalHeader } from \"shards-react\";\n\nconst Player = props => {\n  let {\n    client\n  } = props;\n  const [allPlayers, setAllPlayers] = useState();\n  const [open, setModelOpen] = useState(true);\n  useEffect(() => {\n    client.query({\n      query: getAllPlayers,\n      variables: {}\n    }).then(response => {\n      let data = response.data.getAllPlayers;\n      setAllPlayers(data);\n    });\n  }, []);\n  const allStyles = {\n    playersDiv: {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px solid gray\"\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"dr-example-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Player Comparision\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Compare, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"All Players\")), React.createElement(Button, {\n    style: {\n      float: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Add new Player +\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(StackGrid, {\n    columnWidth: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, typeof allPlayers != \"undefined\" && allPlayers.length != 0 ? allPlayers.map((item, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        maxWidth: \"300px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      style: {\n        width: 300,\n        height: 200\n      },\n      src: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, item.playerName), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Runs: \", item.runs, \" ; Wickets: \", item.wickets, \" ; Catches: \", item.catches, \" ; Matches: \", item.Matches, \" ; Century: \", item.century), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Compare\"))));\n  }) : null)))), React.createElement(Modal, {\n    open: open,\n    toggle: this.toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Header\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\uD83D\\uDC4B Hello there!\")));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/mac/Documents/Rohit/reactTask/client/src/components/Players.js"],"names":["React","Component","useState","useEffect","useRef","Container","Row","Col","StackGrid","getAllPlayers","Compare","Card","CardHeader","CardTitle","CardImg","CardBody","CardFooter","Button","Modal","ModalBody","ModalHeader","Player","props","client","allPlayers","setAllPlayers","open","setModelOpen","query","variables","then","response","data","allStyles","playersDiv","width","height","border","float","length","map","item","i","maxWidth","image","playerName","runs","wickets","catches","Matches","century","toggle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  { Component, useState, useEffect,useRef } from 'react';\nimport { Container, Row, Col } from \"shards-react\";\nimport StackGrid from \"react-stack-grid\";\nimport {getAllPlayers} from './query';\nimport Compare from './Compare';\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardImg,\n    CardBody,\n    CardFooter,\n    Button,\n    Modal, ModalBody, ModalHeader,\n  } from \"shards-react\";\n\n  \n\n\n\nconst Player = (props) =>{\n\n  let {client} = props;\n  const [allPlayers,setAllPlayers] = useState();\n  const [open,setModelOpen] = useState(true);\n   \n\n  useEffect(() => {\n    client.query({\n      query:getAllPlayers,\n      variables:{}\n    }).then((response)=>{\n       \n       let data = response.data.getAllPlayers;\n       setAllPlayers(data);\n    })\n  }, [])\n\n  const allStyles = {\n      playersDiv:{\n        width:\"100%\",\n        height:\"100%\",\n        border:\"1px solid gray\",\n      }\n  }\n\n  \n    return(\n\n        <div>\n          <Container className=\"dr-example-container\">\n            <Row>\n              <Col>\n              <br/>\n            <center><h4>Player Comparision</h4></center>\n            <br/>\n            \n            <Compare client={client} />\n            <br/>\n            <center><h4>All Players</h4></center>\n            <Button style={{float:\"right\"}}>Add new Player +</Button>\n            <br/>\n         \n            <StackGrid\n              columnWidth={300}\n             >\n\n             {typeof allPlayers!=\"undefined\" && allPlayers.length!=0 ? allPlayers.map((item,i)=>{\n               return(\n              <div key={i}>\n                <Card style={{ maxWidth: \"300px\" }}>\n        \n             <CardImg style={{width:300,height:200}} src={item.image} />\n             <CardBody>\n            <CardTitle>{item.playerName}</CardTitle>\n               <p>Runs: {item.runs} ; Wickets: {item.wickets} ; Catches: {item.catches} ; Matches: {item.Matches} ; Century: {item.century}</p>\n            <Button>Compare</Button>\n            </CardBody>\n     \n            </Card>\n    </div>)\n             }):null}   \n            </StackGrid>\n            </Col>\n            </Row>\n            </Container>\n\n\n\n          <Modal open={open} toggle={this.toggle}>\n          <ModalHeader>Header</ModalHeader>\n          <ModalBody>👋 Hello there!</ModalBody>\n        </Modal>\n        </div>\n    )\n}\n\n\n\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}