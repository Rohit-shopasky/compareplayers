{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Rohit/reactTask/client/src/components/Compare.js\";\nimport React from 'react';\nimport { Component, useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col } from \"shards-react\";\nimport { searchPlayer } from './query';\nimport { ListGroup, ListGroupItem } from \"shards-react\";\nimport { FormInput } from \"shards-react\";\nconst allStyles = {\n  compareDiv: {\n    width: \"50%\",\n    height: \"100%\",\n    border: \"1px solid red\"\n  },\n  inputFieldLeft: {\n    width: \"30%\",\n    position: \"relative\",\n    left: 200\n  },\n  inputFieldRight: {\n    width: \"30%\",\n    position: \"relative\",\n    left: 400,\n    float: \"left\"\n  },\n  suggestion: {\n    width: \"100%\",\n    height: \"100%\",\n    border: \"1px solid red\"\n  }\n};\n\nconst Compare = props => {\n  let {\n    client\n  } = props;\n  const [player1, setPlayer1] = useState(\"\");\n  const [player2, setPlayer2] = useState(\"\");\n  const [suggestPlayer1, setSuggestPlayer1] = useState();\n  const [suggestPlayer2, setSuggestPlayer2] = useState();\n\n  const handleChange = (value, player) => {\n    console.log(\"value\", value, \"player\", player);\n    if (player == \"p1\") setPlayer1(value);else setPlayer2(value);\n    let currentPlayer = player1 == \"\" ? player2 : player1;\n    client.query({\n      query: searchPlayer,\n      variables: {\n        playerName: currentPlayer\n      }\n    }).then(response => {\n      let data = response.data.searchPlayer;\n      console.log(\"dats\", data);\n      if (player == \"p1\") setSuggestPlayer1(data);else setSuggestPlayer2(data);\n    });\n  };\n\n  const hideSuggestion = (player, value) => {\n    if (player == \"p1\") {\n      setPlayer1(value);\n      setSuggestPlayer1();\n    } else {\n      setPlayer2(value);\n      setSuggestPlayer2();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    id: \"player1\",\n    value: player1,\n    onChange: e => handleChange(e.target.value, \"p1\"),\n    placeholder: \"Player 1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: allStyles.suggestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, typeof suggestPlayer1 != \"undefined\" && suggestPlayer1.length != 0 ? suggestPlayer1.map(item => {\n    return React.createElement(ListGroupItem, {\n      onClick: e => hideSuggestion(\"p1\", item.playerName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, item.playerName);\n  }) : null))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    id: \"player2\",\n    value: player2,\n    onChange: e => handleChange(e.target.value, \"p2\"),\n    placeholder: \"Player 2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: allStyles.suggestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, typeof suggestPlayer2 != \"undefined\" && suggestPlayer2.length != 0 ? suggestPlayer2.map(item => {\n    return React.createElement(ListGroupItem, {\n      onClick: e => setPlayer2(item.playerName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, item.playerName);\n  }) : null)))));\n};\n\nexport default Compare;","map":{"version":3,"sources":["/Users/mac/Documents/Rohit/reactTask/client/src/components/Compare.js"],"names":["React","Component","useState","useEffect","useRef","Container","Row","Col","searchPlayer","ListGroup","ListGroupItem","FormInput","allStyles","compareDiv","width","height","border","inputFieldLeft","position","left","inputFieldRight","float","suggestion","Compare","props","client","player1","setPlayer1","player2","setPlayer2","suggestPlayer1","setSuggestPlayer1","suggestPlayer2","setSuggestPlayer2","handleChange","value","player","console","log","currentPlayer","query","variables","playerName","then","response","data","hideSuggestion","e","target","length","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  { Component, useState, useEffect,useRef } from 'react';\nimport { Container, Row, Col } from \"shards-react\";\nimport {searchPlayer} from './query';\nimport { ListGroup, ListGroupItem } from \"shards-react\";\n\nimport { FormInput } from \"shards-react\";\n\nconst allStyles = {\n    compareDiv:{\n        width:\"50%\",\n        height:\"100%\",\n        border:\"1px solid red\"\n        \n    },\n    inputFieldLeft:{\n        width:\"30%\",\n        position:\"relative\",\n        left:200,\n        \n    },\n    inputFieldRight:{\n        width:\"30%\",\n        position:\"relative\",\n        left:400,\n        float:\"left\",\n        \n    },\n\n    suggestion:{\n        width:\"100%\",\n        height:\"100%\",\n        border:\"1px solid red\",\n        \n    }\n}\n\nconst Compare =(props) =>{\n\n    let {client} = props;\n\n    const [player1,setPlayer1] = useState(\"\");\n    const [player2,setPlayer2] = useState(\"\");\n    const [suggestPlayer1,setSuggestPlayer1] = useState();\n    const [suggestPlayer2,setSuggestPlayer2] = useState();\n    \n\n    const handleChange = (value,player) =>{\n        console.log(\"value\",value,\"player\",player);\n        if(player==\"p1\")\n        setPlayer1(value)\n        else\n        setPlayer2(value);\n\n        \n\n        let currentPlayer = player1==\"\" ? player2 : player1; \n\n        client.query({\n            query:searchPlayer,\n            variables:{playerName:currentPlayer}\n          }).then((response)=>{\n             \n             let data = response.data.searchPlayer;\n             console.log(\"dats\",data);\n             if(player==\"p1\")\n             setSuggestPlayer1(data);\n             else\n             setSuggestPlayer2(data);\n          })\n        \n    }\n\n    const hideSuggestion = (player,value) =>{\n     if(player==\"p1\")\n     {\n         setPlayer1(value);\n         setSuggestPlayer1();\n     }\n     else\n     {\n        setPlayer2(value);\n        setSuggestPlayer2();\n     }\n    }\n\n\n\nreturn (\n    <div>\n\n    <Row>\n   \n          <Col>\n          <FormInput id=\"player1\" value={player1}  onChange={(e)=>handleChange(e.target.value,\"p1\",)} placeholder=\"Player 1\" />\n          <div style={allStyles.suggestion}>\n          <ListGroup>\n           {typeof suggestPlayer1!=\"undefined\" && suggestPlayer1.length!=0 ? suggestPlayer1.map((item)=>{\n               return(\n           <ListGroupItem onClick={(e)=>hideSuggestion(\"p1\",item.playerName)}>{item.playerName}</ListGroupItem> \n               )\n           }):null}\n        </ListGroup>\n          </div>\n          </Col>\n          <Col>\n          <FormInput id=\"player2\" value={player2} onChange={(e)=>handleChange(e.target.value,\"p2\")} placeholder=\"Player 2\" />\n          <div style={allStyles.suggestion}>\n          <ListGroup>\n           {typeof suggestPlayer2!=\"undefined\" && suggestPlayer2.length!=0 ? suggestPlayer2.map((item)=>{\n               return(\n           <ListGroupItem onClick={(e)=>setPlayer2(item.playerName)}>{item.playerName}</ListGroupItem> \n               )\n           }):null}\n        </ListGroup>\n          </div>\n          </Col>\n        </Row>\n\n       \n\n\n\n    </div>\n)\n}\n\n\nexport default Compare;"]},"metadata":{},"sourceType":"module"}